rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // isCoachFor: Checks if the requesting user's UID matches the UID stored 
    // in the personalInfo of the coach assigned to the application.
    function isCoachFor(application) {
      let coachDoc = get(/databases/$(database)/documents/coaches/$(application.coachId));
      // Ensure the user is authenticated before checking their UID.
      return request.auth != null && coachDoc.data.personalInfo.uid == request.auth.uid;
    }
    
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /coaches/{coachId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /shippingOptions/{optionId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /orders/{orderId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    match /coachingApplications/{applicationId} {
      allow create: if true;
      // An admin can read/update/delete.
      // A coach can read/update/delete THEIR OWN applications.
      allow read, update, delete: if isAdmin() || isCoachFor(resource.data);
    }
    
    match /memberships/{membershipId} {
      // ONLY admins should be able to read all memberships to prevent data scraping.
      // Your server-side code can still read this collection because server-side
      // operations bypass these client-side rules.
      allow read, write: if isAdmin();
    }
    
    // Admin-only collections
    match /counters/{counterId} {
      allow read, write: if isAdmin();
    }
    match /contactSubmissions/{submissionId} {
      allow read, write: if isAdmin();
    }
    match /expenses/{expenseId} {
      allow read, write: if isAdmin();
    }
    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }
  }
}
