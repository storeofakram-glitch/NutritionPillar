rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an authenticated admin
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Helper function to check if the user is the coach assigned to an application
    function isAssignedCoach(application) {
      let coachDoc = get(/databases/$(database)/documents/coaches/$(application.coachId));
      // Ensure the personalInfo object and uid exist before comparing
      return request.auth != null && 'personalInfo' in coachDoc.data && 'uid' in coachDoc.data.personalInfo && coachDoc.data.personalInfo.uid == request.auth.uid;
    }
    
    // --- Publicly Readable Collections ---
    // Anyone can read for the public site, only admins can write.
    // Admins also get list permission for dashboard queries.
    match /products/{productId} {
      allow read: if true;
      allow list, write: if isAdmin();
    }
    match /coaches/{coachId} {
      allow read: if true;
      allow list, write: if isAdmin();
    }
    match /settings/{settingId} {
      allow read: if true;
      allow list, write: if isAdmin();
    }
    match /shippingOptions/{optionId} {
      allow read: if true;
      allow list, write: if isAdmin();
    }
    
    // --- User-Created & Admin-Managed Collections ---

    // Orders can be created by anyone, but only managed by admins.
    match /orders/{orderId} {
      allow create: if true;
      allow list, read, update, delete: if isAdmin();
    }
    
    // Applications can be created by anyone.
    // Admins have full control. Coaches can update/delete their own.
    match /coachingApplications/{applicationId} {
      allow create: if true;
      allow list, read: if isAdmin();
      allow update, delete: if isAdmin() || isAssignedCoach(resource.data);
    }
    
    // Memberships can only be read and written by admins.
    // This is crucial for security as membership codes are validated server-side.
    match /memberships/{membershipId} {
      allow list, read, write: if isAdmin();
    }

    // Strictly admin-only collections for backend operations.
    match /admins/{adminId} {
       allow list, read, write: if isAdmin();
    }
    match /counters/{counterId} {
      allow list, read, write: if isAdmin();
    }
     match /contactSubmissions/{submissionId} {
      allow list, read, write: if isAdmin();
    }
    match /expenses/{expenseId} {
      allow list, read, write: if isAdmin();
    }
  }
}
